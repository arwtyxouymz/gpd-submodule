<launch>
  
  <!-- Load hand geometry parameters --> 
  
  <include file="$(find gpd)/launch/hand_geometry.launch">
    <arg name="node" value="detect_grasps" />
  </include>
 <node name="gpd_service_proxy" pkg="hayate_gpd" type="gpd_service_proxy.py" output="screen">
 </node>
  <!-- Load classifier parameters -->  
  <include file="$(find gpd)/launch/caffe/classifier_15channels.launch">
    <arg name="node" value="detect_grasps" />
  </include>
  
	<node name="detect_grasps" pkg="gpd" type="detect_grasps_server" output="screen">
    <param name="is_benchmark" value="false" />
    <param name="is_segment" value="true" /> 
    <param name="segmentation_service_name" value="/hayate/get_object_pointcloud_hsrb" />
    
    <!-- If sequential importance sampling is used (default: false) -->
    <param name="use_importance_sampling" value="false" />
        
    <!-- What type of point cloud is used and what ROS topic it comes from -->
    <param name="cloud_type" value="0" /> <!-- 0: PointCloud2, 1: CloudSized, 2: CloudIndexed, 3: CloudSamples -->
    <param name="cloud_topic" value="/hsrb/head_rgbd_sensor/depth_registered/rectified_points" />
    
    <!-- (optional) The ROS topic that the samples come from (default: an empty string) -->
    <param name="samples_topic" value="" />
    
    <param name="user_gpu" value="true" />
    <param name="rviz_topic" value="/detected_grasp" />

    <!-- Plotting parameters -->
    <param name="plot_normals" value="false" />
    <param name="plot_samples" value="false" />    
    <param name="plot_candidates" value="false" />
    <param name="plot_filtered_grasps" value="false" />
    <param name="plot_valid_grasps" value="false" />
    <param name="plot_clusters" value="false" />
    <param name="plot_selected_grasps" value="false" />
    
    <!-- Preprocessing of point cloud -->
    <param name="voxelize" value="true"/>
    <param name="remove_outliers" value="false"/>
    <rosparam param="workspace"> [-5.0, 5.0, -5.0, 5.0, 0.01, 5.0] </rosparam> 
    <rosparam param="camera_position"> [0.0, 0.0, 0.0] </rosparam>
            
    <!-- General parameters -->
    <param name="num_samples" value="1000" />
    <param name="num_threads" value="12" />
    
    <!-- Parameters for local grasp candidate search -->
    <param name="nn_radius" value="0.01" />
    <param name="num_orientations" value="12" /> <!-- Number of orientations to consider -->
    
    <!-- Filtering of grasp candidates --> 
    <param name="filter_grasps" value="true" /> <!-- on workspace and robot hand aperture -->
    <rosparam param="workspace_grasps"> [-5.0, 5.0, -5.0, 5.0, 0.01, 5.0] </rosparam> 
   
<param name="filter_half_antipodal" value="true"/> <!-- on half antipodal -->
    
    <!-- Grasp image creation -->
    <param name="create_image_batches" value="false" /> <!-- creates grasp images in batches (less memory usage) -->
    <param name="remove_plane_before_image_calculation" value="true" /> <!-- removes table plane from point cloud to speed up shadow computations -->
    
    <!-- Clustering of grasps -->
    <param name="min_inliers" value="3" /> <!-- threshold of the cluster if the #cluster > min_inliers, it is treated as a cluster else skip-->
    <!-- Grasp selection -->
    <param name="min_score_diff" value="-10" />
    <param name="min_aperture" value="0.029" />
    <param name="max_aperture" value="0.072" />
    <param name="num_selected" value="5000" />
</node>
  
</launch>
